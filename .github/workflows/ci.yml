name: CI/CD

on:
  push:
    paths-ignore:
      - '.github/**'
      - '.devcontainer/**'
      - 'CHANGELOG.md'
      - 'MAINTAINERS.md'
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: Test / OS ${{ matrix.os }} / Python ${{ matrix.python-version }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: 1.8.3
      - name: Run Tests
        run: make run_tests
      - name: Upload Coverage
        uses: codecov/codecov-action@v4
      - name: Run Tests with pydantic v1
        run: |
          pip install pydantic==1.10.12
          make tests_only
  publish:
    needs: test
    if: ${{ !startsWith(github.event.head_commit.message, 'bump') && !startsWith(github.event.head_commit.message, 'chore') && github.ref == 'refs/heads/main' && contains(fromJSON('["push", "workflow_dispatch"]'), github.event_name) && github.repository_owner == 'supabase' }}
    runs-on: ubuntu-latest
    name: "supabase_auth: Bump version, create changelog and publish"
    environment:
      name: pypi
      url: https://pypi.org/p/supabase_auth
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
      contents: write # needed for dependabot to write to repo
    outputs:
      is-released: ${{ steps.release.outputs.released }}
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
          token: ${{ secrets.SILENTWORKS_PAT }}
          # This action uses Python Semantic Release v8
      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v9.8.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # NOTE: DO NOT wrap the conditional in ${{ }} as it will always evaluate to true.
        # See https://github.com/actions/runner/issues/1173
        if: steps.release.outputs.released == 'true'

      - name: Publish package distributions to GitHub Releases
        uses: python-semantic-release/upload-to-gh-release@main
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
  publish_legacy:
    needs: publish
    if: ${{ !startsWith(github.event.head_commit.message, 'bump') && !startsWith(github.event.head_commit.message, 'chore') && github.ref == 'refs/heads/main' && contains(fromJSON('["push", "workflow_dispatch"]'), github.event_name) && github.repository_owner == 'supabase' }}
    runs-on: ubuntu-latest
    name: "gotrue: Bump version and publish"
    environment:
      name: pypi
      url: https://pypi.org/p/gotrue
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
      contents: write # needed for github actions bot to write to repo
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
          token: ${{ secrets.SILENTWORKS_PAT }}

      - name: Rename Project
        id: rename_project
        run: make rename_project

      - name: Install poetry
        uses: abatilo/actions-poetry@v3
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v4
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install

      - name: Build package distribution directory
        id: build_dist
        run: make build_package

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # NOTE: DO NOT wrap the conditional in ${{ }} as it will always evaluate to true.
        # See https://github.com/actions/runner/issues/1173
        if: needs.publish.outputs.is-released == 'true'
